% This file generates plots out of existiing datasets generated by 
% "ScenariosNeuralNetGenerator.m"
load('id_024ba1227ac448e9_summary.mat')
load('id_024ba1227ac448e9_data_vola_tanh_34269.mat')
clean = 0;

%% Loading underlying data
path_data = 'C:/Users/Henrik/Documents/GitHub/MasterThesisHNGDeepVola/Code/Calibration Calloption/';
alldata = {};
k = 0;
for y = stat.years
    for goal = stat.goalfuncs
        k = k+1;
        file       = strcat(path_data,'params_options_',num2str(y),'_h0_calibrated_',goal,'_InteriorPoint_noYield.mat');
        tmp        = load(file);
        alldata{k} = tmp.values;
        year_total(k) =y;
    end
end
%
Ninputs = 0;
for j = 1:k
    for m = 1:length(alldata{1,j})
        if isempty(alldata{1,j}{1,m})
            continue
        end
        Ninputs = Ninputs+1;
        week_vec(Ninputs) = m;
        year_vec(Ninputs) =year_total(j);
        mse(Ninputs,:)    = alldata{1,j}{1,m}.MSE;
        mape(Ninputs,:)   = alldata{1,j}{1,m}.MAPE;
        params(Ninputs,:) = alldata{1,j}{1,m}.hngparams;
        sig2_0(Ninputs)   = alldata{1,j}{1,m}.sig20; 
        yields(Ninputs,:) = alldata{1,j}{1,m}.yields;
        flag(Ninputs)     = alldata{1,j}{1,m}.optispecs.flag;
    end
end

%% Plots
figure("Name",id)
parameters =data_vola(:,1:5);
%(a,b,g,y
constraint = data_vola(:,1).*data_vola(:,3).^2+data_vola(:,2);

ha = subplot(2,3,1);
dim = get(ha, 'position');
tmp = histogram(data_vola(:,1),'Normalization','probability');title('alpha')
line([min(data_pure(:,2));min(data_pure(:,2))],[0;max(tmp.Values)],'Color','r','Linestyle','--');
line([max(data_pure(:,2));max(data_pure(:,2))],[0;max(tmp.Values)],'Color','r','Linestyle','--');
str = strcat('mean: ',num2str(mean(data_vola(:,1))),' median: ',num2str(median(data_vola(:,1))));
annotation('textbox',dim,'String',str,'FitBoxToText','on');
ha = subplot(2,3,2);
dim = get(ha, 'position');
tmp = histogram(data_vola(:,2),'Normalization','probability');title('beta')
line([min(data_pure(:,3));min(data_pure(:,3))],[0;max(tmp.Values)],'Color','r','Linestyle','--');
line([max(data_pure(:,3));max(data_pure(:,3))],[0;max(tmp.Values)],'Color','r','Linestyle','--');
str = strcat('mean: ',num2str(mean(data_vola(:,2))),' median: ',num2str(median(data_vola(:,2))));
annotation('textbox',dim,'String',str,'FitBoxToText','on');
ha = subplot(2,3,3);
dim = get(ha, 'position');
tmp = histogram(data_vola(:,3),'Normalization','probability');title('gamma')
line([min(data_pure(:,4));min(data_pure(:,4))],[0;max(tmp.Values)],'Color','r','Linestyle','--');
line([max(data_pure(:,4));max(data_pure(:,4))],[0;max(tmp.Values)],'Color','r','Linestyle','--');
str = strcat('mean: ',num2str(mean(data_vola(:,3))),' median: ',num2str(median(data_vola(:,3))));
annotation('textbox',dim,'String',str,'FitBoxToText','on');
ha = subplot(2,3,4);
dim = get(ha, 'position');
tmp = histogram(data_vola(:,4),'Normalization','probability');title('omega')
line([min(data_pure(:,1));min(data_pure(:,1))],[0;max(tmp.Values)],'Color','r','Linestyle','--');
line([max(data_pure(:,1));max(data_pure(:,1))],[0;max(tmp.Values)],'Color','r','Linestyle','--');
str = strcat('mean: ',num2str(mean(data_vola(:,4))),' median: ',num2str(median(data_vola(:,4))));
annotation('textbox',dim,'String',str,'FitBoxToText','on');
ha = subplot(2,3,5);
dim = get(ha, 'position');
tmp = histogram(data_vola(:,5),'Normalization','probability');title('h0')
line([min(data_pure(:,5));min(data_pure(:,5))],[0;max(tmp.Values)],'Color','r','Linestyle','--');
line([max(data_pure(:,5));max(data_pure(:,5))],[0;max(tmp.Values)],'Color','r','Linestyle','--');
str = strcat('mean: ',num2str(mean(data_vola(:,5))),' median: ',num2str(median(data_vola(:,5))));
annotation('textbox',dim,'String',str,'FitBoxToText','on');
ha = subplot(2,3,6);
dim = get(ha, 'position');
tmp = histogram(constraint,'Normalization','probability');title('constraint');
line([min(emp_constraint);min(emp_constraint)],[0;max(tmp.Values)],'Color','r','Linestyle','--');
line([max(emp_constraint);max(emp_constraint)],[0;max(tmp.Values)],'Color','r','Linestyle','--');
str = strcat('mean: ',num2str(mean(constraint)),' median: ',num2str(median(constraint)));
annotation('textbox',dim,'String',str,'FitBoxToText','on');
