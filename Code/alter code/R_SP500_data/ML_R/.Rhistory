a0=para[1] # the variance’s intercept
b1=para[2] # the persistence parameter
a1=para[3] # the autoregressive parameter
gamma=para[4] # the leverage parameter
lambda0=para[5] # the risk premium
r = 0.01*rep(1, length(x))
# the log-likelihood is initialized at 0
loglik=0
# The first value for the variance is set to be equal to its long term value
h=(a0+a1)/(1-b1-a1*gamma^2)
# The next for loop recursively computes the conditional variance,
# risk premium and the associated density
for (i in 1:length(x)){
# The conditional log-likelihood at time i is:
temp=dnorm(x[i],mean=r[i]/250+lambda0*h,sd=sqrt(h),log=TRUE) # The full log-likelihood is then obtained by summing up
# those individual log-likelihood
loglik=loglik+temp
# The epsilon is then computed:
eps=x[i]-(r[i]/250+lambda0*h)
# An the conditional variance is updated as well
h=a0+a1*(eps/sqrt(h)-gamma*sqrt(h))^2+b1*h }
# R provides minimizers, that is why the maximum likelihood is # obtained by trying to minimize -loglik
return(-loglik)
}
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(0,0,0,0,0)
optim(initial_parameters,loglik_heston,x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-6,1e-6,0.6,400,0.2)
optim(initial_parameters,loglik_heston,x=logret)
data = read.table("SP500_data_1.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-6,1e-6,0.6,400,0.2)
optim(initial_parameters,loglik_heston,x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-6,1e-6,0.6,0,0.2)
optim(initial_parameters,loglik_heston,x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-6,1e-6,0.6,100,0.2)
optim(initial_parameters,loglik_heston,x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-6,1e-6,0.6,10,0.2)
optim(initial_parameters,loglik_heston,x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-6,1e-6,0.6,0,0.2)
optim(initial_parameters,loglik_heston,x=logret)
loglik_heston<-function(x, para){
# "para" is a vector containing the parameters over
# which the optimization will be performed
# "x" is a vector containing the historical returns on the underlying asset # r is the risk-free rate, expressed here on a yearly basis
a0=para[1] # the variance’s intercept
b1=para[2] # the persistence parameter
a1=para[3] # the autoregressive parameter
gamma=para[4] # the leverage parameter
lambda0=para[5] # the risk premium
r = 0.01*rep(0, length(x))
# the log-likelihood is initialized at 0
loglik=0
# The first value for the variance is set to be equal to its long term value
h=(a0+a1)/(1-b1-a1*gamma^2)
# The next for loop recursively computes the conditional variance,
# risk premium and the associated density
for (i in 1:length(x)){
# The conditional log-likelihood at time i is:
temp=dnorm(x[i],mean=r[i]/250+lambda0*h,sd=sqrt(h),log=TRUE) # The full log-likelihood is then obtained by summing up
# those individual log-likelihood
loglik=loglik+temp
# The epsilon is then computed:
eps=x[i]-(r[i]/250+lambda0*h)
# An the conditional variance is updated as well
h=a0+a1*(eps/sqrt(h)-gamma*sqrt(h))^2+b1*h }
# R provides minimizers, that is why the maximum likelihood is # obtained by trying to minimize -loglik
return(-loglik)
}
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-6,1e-6,0.6,0,0.2)
optim(initial_parameters,loglik_heston,x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-7,1e-6,0.6,200,0.2)
optim(initial_parameters,loglik_heston,x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-7,1e-6,0.6,200,0.2)
nlm(initial_parameters,loglik_heston,x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-7,1e-6,0.6,200,0.2)
nlm(loglik_heston, initial_parameters, x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-6,1e-6,0.6,200,0.2)
nlm(loglik_heston, initial_parameters, x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(0.2,0.2,0.2,0.2,0.2)
nlm(loglik_heston, initial_parameters, x=logret)
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-6,1e-6,0.6,200,0.2)
nlminb(initial_parameters, loglik_heston, x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(5e-6,1e-6,0.6,0,0.2)
nlminb(initial_parameters, loglik_heston, x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==1995
logret = data[idx,4]
initial_parameters = c(4e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston, x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2000
logret = data[idx,4]
initial_parameters = c(4e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston, x=logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2
logret = data[idx,4]
initial_parameters = c(4e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,,logret,0.01*rep(1, length(x)))
loglik_heston<-function(para,x,r){
# "para" is a vector containing the parameters over
# which the optimization will be performed
# "x" is a vector containing the historical returns on the underlying asset # r is the risk-free rate, expressed here on a yearly basis
a0=para[1] # the variance’s intercept
b1=para[2] # the persistence parameter
a1=para[3] # the autoregressive parameter
gamma=para[4] # the leverage parameter
lambda0=para[5] # the risk premium
# the log-likelihood is initialized at 0
loglik=0
# The first value for the variance is set to be equal to its long term value
h=(a0+a1)/(1-b1-a1*gamma^2)
# The next for loop recursively computes the conditional variance,
# risk premium and the associated density
for (i in 1:length(x)){
# The conditional log-likelihood at time i is:
temp=dnorm(x[i],mean=r[i]/250+lambda0*h,sd=sqrt(h),log=TRUE) # The full log-likelihood is then obtained by summing up
# those individual log-likelihood
loglik=loglik+temp
# The epsilon is then computed:
eps=x[i]-(r[i]/250+lambda0*h)
# An the conditional variance is updated as well
h=a0+a1*(eps/sqrt(h)-gamma*sqrt(h))^2+b1*h }
# R provides minimizers, that is why the maximum likelihood is # obtained by trying to minimize -loglik
return(-loglik)
}
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2
logret = data[idx,4]
initial_parameters = c(4e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,,logret,0.01*rep(1, length(x)))
loglik_heston<-function(para,x,r){
# "para" is a vector containing the parameters over
# which the optimization will be performed
# "x" is a vector containing the historical returns on the underlying asset # r is the risk-free rate, expressed here on a yearly basis
a0=para[1] # the variance’s intercept
b1=para[2] # the persistence parameter
a1=para[3] # the autoregressive parameter
gamma=para[4] # the leverage parameter
lambda0=para[5] # the risk premium
# the log-likelihood is initialized at 0
loglik=0
# The first value for the variance is set to be equal to its long term value
h=(a0+a1)/(1-b1-a1*gamma^2)
# The next for loop recursively computes the conditional variance,
# risk premium and the associated density
for (i in 1:length(x)){
# The conditional log-likelihood at time i is:
temp=dnorm(x[i],mean=r[i]/250+lambda0*h,sd=sqrt(h),log=TRUE) # The full log-likelihood is then obtained by summing up
# those individual log-likelihood
loglik=loglik+temp
# The epsilon is then computed:
eps=x[i]-(r[i]/250+lambda0*h)
# An the conditional variance is updated as well
h=a0+a1*(eps/sqrt(h)-gamma*sqrt(h))^2+b1*h }
# R provides minimizers, that is why the maximum likelihood is # obtained by trying to minimize -loglik
return(-loglik)
}
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2
logret = data[idx,4]
initial_parameters = c(4e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,,logret,0.01*rep(1, length(x)))
loglik_heston<-function(para,x){
# "para" is a vector containing the parameters over
# which the optimization will be performed
# "x" is a vector containing the historical returns on the underlying asset # r is the risk-free rate, expressed here on a yearly basis
a0=para[1] # the variance’s intercept
b1=para[2] # the persistence parameter
a1=para[3] # the autoregressive parameter
gamma=para[4] # the leverage parameter
lambda0=para[5] # the risk premium
# the log-likelihood is initialized at 0
loglik=0
# The first value for the variance is set to be equal to its long term value
h=(a0+a1)/(1-b1-a1*gamma^2)
# The next for loop recursively computes the conditional variance,
# risk premium and the associated density
r = 0.01*rep(1, length(x))
for (i in 1:length(x)){
# The conditional log-likelihood at time i is:
temp=dnorm(x[i],mean=r[i]/250+lambda0*h,sd=sqrt(h),log=TRUE) # The full log-likelihood is then obtained by summing up
# those individual log-likelihood
loglik=loglik+temp
# The epsilon is then computed:
eps=x[i]-(r[i]/250+lambda0*h)
# An the conditional variance is updated as well
h=a0+a1*(eps/sqrt(h)-gamma*sqrt(h))^2+b1*h }
# R provides minimizers, that is why the maximum likelihood is # obtained by trying to minimize -loglik
return(-loglik)
}
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2
logret = data[idx,4]
initial_parameters = c(4e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2
logret = data[idx,4]
initial_parameters = c(4e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,,logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2012
logret = data[idx,4]
initial_parameters = c(4e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,,logret)
warnings()
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2012
logret = data[idx,4]
initial_parameters = c(4e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2012
logret = data[idx,4]
initial_parameters = c(4e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,,logret)
loglik_heston<-function(para,x,r){
# "para" is a vector containing the parameters over
# which the optimization will be performed
# "x" is a vector containing the historical returns on the underlying asset # r is the risk-free rate, expressed here on a yearly basis
a0=para[1] # the variance’s intercept
b1=para[2] # the persistence parameter
a1=para[3] # the autoregressive parameter
gamma=para[4] # the leverage parameter
lambda0=para[5] # the risk premium
# the log-likelihood is initialized at 0
loglik=0
# The first value for the variance is set to be equal to its long term value
h=(a0+a1)/(1-b1-a1*gamma^2)
# The next for loop recursively computes the conditional variance,
# risk premium and the associated density
for (i in 1:length(x)){
# The conditional log-likelihood at time i is:
temp=dnorm(x[i],mean=r[i]/250+lambda0*h,sd=sqrt(h),log=TRUE) # The full log-likelihood is then obtained by summing up
# those individual log-likelihood
loglik=loglik+temp
# The epsilon is then computed:
eps=x[i]-(r[i]/250+lambda0*h)
# An the conditional variance is updated as well
h=a0+a1*(eps/sqrt(h)-gamma*sqrt(h))^2+b1*h }
# R provides minimizers, that is why the maximum likelihood is # obtained by trying to minimize -loglik
return(-loglik)
}
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2012
logret = data[idx,4]
initial_parameters = c(4e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,,logret,0.01*rep(1, length(x)))
View(data)
View(data)
loglik_heston<-function(para,x,r=0.01*rep(1, length(x))){
# "para" is a vector containing the parameters over
# which the optimization will be performed
# "x" is a vector containing the historical returns on the underlying asset # r is the risk-free rate, expressed here on a yearly basis
a0=para[1] # the variance’s intercept
b1=para[2] # the persistence parameter
a1=para[3] # the autoregressive parameter
gamma=para[4] # the leverage parameter
lambda0=para[5] # the risk premium
# the log-likelihood is initialized at 0
loglik=0
# The first value for the variance is set to be equal to its long term value
h=(a0+a1)/(1-b1-a1*gamma^2)
# The next for loop recursively computes the conditional variance,
# risk premium and the associated density
for (i in 1:length(x)){
# The conditional log-likelihood at time i is:
temp=dnorm(x[i],mean=r[i]/250+lambda0*h,sd=sqrt(h),log=TRUE) # The full log-likelihood is then obtained by summing up
# those individual log-likelihood
loglik=loglik+temp
# The epsilon is then computed:
eps=x[i]-(r[i]/250+lambda0*h)
# An the conditional variance is updated as well
h=a0+a1*(eps/sqrt(h)-gamma*sqrt(h))^2+b1*h }
# R provides minimizers, that is why the maximum likelihood is # obtained by trying to minimize -loglik
return(-loglik)
}
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2012
logret = data[idx,4]
initial_parameters = c(4e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,,logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2012
logret = data[idx,4]
initial_parameters = c(1e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,,logret)
loglik_heston<-function(para,x,r=0.03*rep(1, length(x))){
# "para" is a vector containing the parameters over
# which the optimization will be performed
# "x" is a vector containing the historical returns on the underlying asset # r is the risk-free rate, expressed here on a yearly basis
a0=para[1] # the variance’s intercept
b1=para[2] # the persistence parameter
a1=para[3] # the autoregressive parameter
gamma=para[4] # the leverage parameter
lambda0=para[5] # the risk premium
# the log-likelihood is initialized at 0
loglik=0
# The first value for the variance is set to be equal to its long term value
h=(a0+a1)/(1-b1-a1*gamma^2)
# The next for loop recursively computes the conditional variance,
# risk premium and the associated density
for (i in 1:length(x)){
# The conditional log-likelihood at time i is:
temp=dnorm(x[i],mean=r[i]/250+lambda0*h,sd=sqrt(h),log=TRUE) # The full log-likelihood is then obtained by summing up
# those individual log-likelihood
loglik=loglik+temp
# The epsilon is then computed:
eps=x[i]-(r[i]/250+lambda0*h)
# An the conditional variance is updated as well
h=a0+a1*(eps/sqrt(h)-gamma*sqrt(h))^2+b1*h }
# R provides minimizers, that is why the maximum likelihood is # obtained by trying to minimize -loglik
return(-loglik)
}
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2012
logret = data[idx,4]
initial_parameters = c(1e-6,0.6,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,,logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2012
logret = data[idx,4]
initial_parameters = c(1e-6,0.5,1.5e-6,460,0.64)
optim(initial_parameters, loglik_heston,,logret)
warnings()
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2012
logret = data[idx,4]
initial_parameters = c(5e-6,0.5,1e-6,460,0.64)
optim(initial_parameters, loglik_heston,,logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2012
logret = data[idx,4]
initial_parameters = c(4.3e-7,0.6,1.5e-6,462,0.64)
optim(initial_parameters, loglik_heston,,logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = data[,2]==2011||2012
logret = data[idx,4]
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = (data[,2]== 2012) || (data[,2]== 2011)
logret = data[idx,4]
idx = (data[,2]== 2012) && (data[,2]== 2011)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = any((data[,2]== 2012), (data[,2]== 2011))
logret = data[idx,4]
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = (data[,2]>= 2012)
logret = data[idx,4]
initial_parameters = c(4.3e-7,0.6,1.5e-6,462,0.64)
optim(initial_parameters, loglik_heston,,logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = ((data[,2]>= 2012) && (data[,2]<= 2014))
logret = data[idx,4]
idx = ((data[,2]>= 2012) & (data[,2]<= 2014))
logret = data[idx,4]
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = ((data[,2]>= 1992) & (data[,2]<= 1994))
logret = data[idx,4]
initial_parameters = c(5e-6,0.59,1e-6,420,0.2)
optim(initial_parameters, loglik_heston,,logret)
loglik_heston<-function(para,x,r=0.00*rep(1, length(x))){
# "para" is a vector containing the parameters over
# which the optimization will be performed
# "x" is a vector containing the historical returns on the underlying asset # r is the risk-free rate, expressed here on a yearly basis
a0=para[1] # the variance’s intercept
b1=para[2] # the persistence parameter
a1=para[3] # the autoregressive parameter
gamma=para[4] # the leverage parameter
lambda0=para[5] # the risk premium
# the log-likelihood is initialized at 0
loglik=0
# The first value for the variance is set to be equal to its long term value
h=(a0+a1)/(1-b1-a1*gamma^2)
# The next for loop recursively computes the conditional variance,
# risk premium and the associated density
for (i in 1:length(x)){
# The conditional log-likelihood at time i is:
temp=dnorm(x[i],mean=r[i]/250+lambda0*h,sd=sqrt(h),log=TRUE) # The full log-likelihood is then obtained by summing up
# those individual log-likelihood
loglik=loglik+temp
# The epsilon is then computed:
eps=x[i]-(r[i]/250+lambda0*h)
# An the conditional variance is updated as well
h=a0+a1*(eps/sqrt(h)-gamma*sqrt(h))^2+b1*h }
# R provides minimizers, that is why the maximum likelihood is # obtained by trying to minimize -loglik
return(-loglik)
}
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = ((data[,2]>= 1992) & (data[,2]<= 1994))
logret = data[idx,4]
initial_parameters = c(5e-6,0.59,1e-6,420,0.2)
optim(initial_parameters, loglik_heston,,logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = ((data[,2]>= 1992) & (data[,2]<= 1994))
logret = data[idx,4]
initial_parameters = c(5e-6,0.59,1e-6,420,0.2)
result = optim(initial_parameters, loglik_heston,,logret)
result$par[4]^2*result$par[3]+result$par[2]
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
#idx = ((data[,2]>= 1992) & (data[,2]<= 1994))
idx = (data[,2]==2012)
logret = data[idx,4]
initial_parameters = c(5e-6,0.59,1e-6,420,0.2)
result = optim(initial_parameters, loglik_heston,,logret)
result$par
result$value
result = nlminb(initial_parameters, loglik_heston,,logret)
result = nlminb(initial_parameters, loglik_heston,logret)
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
#idx = ((data[,2]>= 1992) & (data[,2]<= 1994))
idx = (data[,2]==2012)
logret = data[idx,4]
initial_parameters = c(5e-6,0.59,1e-6,420,0.2)
result = nlminb(initial_parameters, loglik_heston,x=logret)
result$par
result$iterations
result$evaluations
result$objective
result = nlm(loglik_heston,initial_parameters, x=logret)
result$minimum
result$estimate
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
#idx = ((data[,2]>= 1992) & (data[,2]<= 1994))
idx = (data[,2]==2012)
logret = data[idx,4]
initial_parameters = c(5e-6,0.59,1e-6,420,0.2)
result = optim(initial_parameters, loglik_heston,x=logret)
View(result)
View(result)
?optim
result = optim(initial_parameters, loglik_heston,x=logret, method="BFGS")
result = optim(initial_parameters, loglik_heston,x=logret, method="Brent")
result = optim(initial_parameters, loglik_heston,x=logret, method="Nelder-Mead")
result = optim(initial_parameters, loglik_heston,gr = NULL, x=logret, method="BFGS")
result = optim(initial_parameters, loglik_heston)
result = optim(initial_parameters, loglik_heston, x=logret)
warnings()
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
#idx = ((data[,2]>= 1992) & (data[,2]<= 1994))
idx = (data[,2]==1950)
logret = data[idx,4]
initial_parameters = c(5e-6,0.59,1e-6,420,0.2)
result = optim(initial_parameters, loglik_heston, x=logret)
View(result)
data = read.table("SP500_data_1.txt", header = TRUE, sep = ",")
#idx = ((data[,2]>= 1992) & (data[,2]<= 1994))
idx = (data[,2]==1950)
logret = data[idx,4]
initial_parameters = c(5e-6,0.59,1e-6,420,0.2)
result = optim(initial_parameters, loglik_heston, x=logret)
data = read.table("SP500_data_1.txt", header = TRUE, sep = ",")
idx = ((data[,2]>= 1990) & (data[,2]<= 2000))
#idx = (data[,2]==1950)
logret = data[idx,4]
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = ((data[,2]>= 1990) & (data[,2]<= 2000))
#idx = (data[,2]==1950)
logret = data[idx,4]
data = read.table("SP500_data.txt", header = TRUE, sep = ",")
idx = ((data[,2]>= 1990) & (data[,2]<= 2010))
#idx = (data[,2]==1950)
logret = data[idx,4]
initial_parameters = c(5e-6,0.59,1e-6,420,0.2)
result = optim(initial_parameters, loglik_heston, x=logret)
View(result)
View(result)
warnings()
1-0.59-1e-6*420**2
sqrt(-1)
